using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace GeneratedNamespace
{
    public partial class Application
    {
        public Application()
        {
            Log = new HashSet<Log>();
        }

        public int Id { get; set; }
        public string Name { get; set; }

        public virtual ICollection<Log> Log { get; set; }
    }

    public partial class Log
    {
        public int Id { get; set; }
        public string Value { get; set; }
        public int ApplicationId { get; set; }

        public virtual Application Application { get; set; }
    }

    public partial class TempContext : DbContext
    {
        public virtual DbSet<Application> Applications { get; set; }
        public virtual DbSet<Log> Logs { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            #warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
            optionsBuilder.UseSqlServer(@"server=localhost;database=Temp;user id=test;password=test");
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Application>(entity =>
            {
                entity.ToTable("Applications");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Log>(entity =>
            {
                entity.ToTable("Logs");

                entity.HasOne(d => d.Application)
                    .WithMany(p => p.Log)
                    .HasForeignKey(d => d.ApplicationId)
                    .OnDelete(DeleteBehavior.Restrict)
                    .HasConstraintName("FK_Logs_Applications");
            });
        }
    }
}